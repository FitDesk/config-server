spring:
  application:
    name: msvc-notifications
  datasource:
    url: jdbc:postgresql://db-fitdesk:5432/notifications_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update 
    show-sql: true 
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        
  # kafka:
  #   bootstrap-servers: kafka:9092
  #   producer:
  #     key-serializer: org.apache.kafka.common.serialization.StringSerializer
  #     value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  #   consumer:
  #     key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #     value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  #     group-id: notifications-service
  #     properties:
  #       spring.json.trusted.packages: "*"

server:
  port: ${MSVC_NOTIFICATION_PORT:9095}



eureka:
  # instance:
  #   prefer-ip-address: true
  #   instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${random.uuid}
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://eureka-server:8761/eureka}
    fetch-registry: true
    register-with-eureka: true

    
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true
logging:
  level:
    org.springframework.security: TRACE
    org.springframework.web: DEBUG
    org.springframework.boot.autoconfigure.security: DEBUG
    org.springframework.web.cloud.openfeign: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG